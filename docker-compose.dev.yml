version: "3.8"

services:
  db:
    image: postgres:15-alpine
    container_name: todo-db-dev
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: todo_app
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network
  
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: todo-backend-dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3000
      DB_USER: postgres
      DB_HOST: db
      DB_NAME: todo_app
      DB_PASSWORD: postgres
      DB_PORT: 5432
      JWT_SECRET: 9af6f6fbafcd2b496195399dbc614489b30a6a7f7a97d2ddd07cb19059b5c875
      JWT_EXPIRES_IN: 7d
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
  
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: todo-frontend-dev
    restart: unless-stopped
    environment:
      VITE_API_BASE_URL: http://localhost:3000/api
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - app-network

volumes:
  postgres_data_dev:

networks:
  app-network:
    driver: bridge